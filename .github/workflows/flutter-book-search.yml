name: Flutter CI/CD - Book Search

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Flutter Build & Test - Book Search
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: stable

      - name: Install Root Dependencies
        run: flutter pub get

      - name: Patch uni_links for AGP 8+
        run: |
          echo "ðŸ“¦ Patching uni_links build.gradle and manifest for AGP 8+"

          gradle_file="$HOME/.pub-cache/hosted/pub.dev/uni_links-0.5.1/android/build.gradle"
          manifest_file="$HOME/.pub-cache/hosted/pub.dev/uni_links-0.5.1/android/src/main/AndroidManifest.xml"

          # Add namespace to build.gradle if missing
          if grep -q 'namespace' "$gradle_file"; then
            echo "âœ… namespace already present in build.gradle"
          else
            sed -i '' '/android {/a\
            namespace "name.avioli.unilinks"
            ' "$gradle_file"
            echo "âœ… Added namespace to build.gradle"
          fi

          # Remove package attr from AndroidManifest.xml if present
          if grep -q 'package="name.avioli.unilinks"' "$manifest_file"; then
            sed -i '' 's/package="name.avioli.unilinks"//' "$manifest_file"
            echo "âœ… Removed package attribute from AndroidManifest.xml"
          else
            echo "âœ… No package attribute found in AndroidManifest.xml"
          fi

      - name: Install Dependencies in All Packages
        run: |
          for dir in packages/features/*/; do
            echo "ðŸ“¦ Running pub get in $dir"
            cd $dir
            flutter pub get
            cd - > /dev/null
          done

      - name: Run Analyzer
        run: flutter analyze

      - name: Run All Tests
        run: |
          for dir in $(find . -type d -name test); do
            echo "ðŸ§ª Running tests in $dir"
            flutter test --coverage $dir || exit 1
          done

      - name: Build Android APK
        run: flutter build apk --debug

      - name: Build iOS App (Debug)
        run: |
          flutter build ios --debug --no-codesign

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: book_search
